Parameters:
  AlertEmail:
    Type: String
    Description: Email address to notify in case the Validate Lambda function breaks
    Default: 'atcl.skcc01@gmail.com' 
  ValidationFrequency:
    Description: 'The frequency with which AWS Config delivers configuration snapshots'
    Type: String
    Default: TwentyFour_Hours
    AllowedValues:
      - One_Hour
      - Three_Hours
      - Six_Hours
      - Twelve_Hours
      - TwentyFour_Hours

Resources:
  ValidateLambdaErrorTopic:
    Type: 'AWS::SNS::Topic'
    Properties: {}

  ValidateLambdaErrorEmailSubscription:
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !Ref AlertEmail
      Protocol: email
      TopicArn: !Ref ValidateLambdaErrorTopic
  ValidateStackSetDeployments:
    From: Lambda
    Properties:
      Principal: config.amazonaws.com
      Code: |
        {{code('validate_stack_set_deployments.py')}}
      Environment:
        StackName: !Ref AWS::StackName
        AccountId: !Ref AWS::AccountId
        NC1: 'StackSet {} needs to be deployed to account {} in region {}'
        NC2: 'StackSet {} is deployed but not in status CURRENT in account {} and region {}'
        NC3: 'StackSet {} is deployed but not defined in tags in account {} and region {}'
        NC4: 'StackSet {} is deployed but in Status {status} in account {} and region {}'
        C1: 'StackSet {} is successfully deployed to account {} in region {}'
        C2: 'StackSet {} not configured in tags but successfully deployed to account {} in region {}'
      Timeout: 300
      Handler: index.vs
      Runtime: python3.7

  ValidateStackSetDeploymentsErrorAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Validate Lambda Function failing'
      Namespace: 'AWS/Lambda'
      MetricName: Errors
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
      - !Ref ValidateLambdaErrorTopic
      Dimensions:
      - Name: FunctionName
        Value: !Ref ValidateStackSetDeploymentsLambdaFunction
      TreatMissingData: notBreaching


  LambdaExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      Path: "/"
      RoleName: CrossAccountStackSetVerificationSourceRole
    Type: AWS::IAM::Role

  LambdaRolePolicy:
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - config:PutEvaluations
              #- organizations:ListAccounts
              - ec2:DescribeRegions
              - cloudformation:ListStackSets
              - cloudformation:DescribeStackSet
              - cloudformation:ListStackInstances
            Resource: '*'
            Effect: Allow
          - Action:
              - sts:AssumeRole
            Resource: arn:aws:iam::*:role/CrossAccountStackSetVerificationTargetRole
            Effect: Allow
      PolicyName: ConfigRuleValidationLambdaPolicy
      Roles:
      - !Ref LambdaExecutionRole
    Type: AWS::IAM::Policy

  ValidateStackSetDeploymentsConfigRule:
    DependsOn: ValidateStackSetDeploymentsLambdaInvokePermission
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: ValidateStackSetDeployments
      Source:
        Owner: CUSTOM_LAMBDA
        SourceDetails:
        - EventSource: "aws.config"
          MessageType: "ScheduledNotification"
          MaximumExecutionFrequency: !Ref ValidationFrequency
        SourceIdentifier: !GetAtt ValidateStackSetDeploymentsLambdaFunction.Arn
