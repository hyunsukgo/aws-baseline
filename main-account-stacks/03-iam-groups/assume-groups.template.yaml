{% set Roles = ['Admin', 
                'Developer', 
                'CloudFormationDeveloper', 
                'ReadOnly', 
                'SecurityAudit', 
                'Operations',
                'AwsViewOnly',
                'AwsDataScientist',
                'AwsPowerUser',
                'AwsNetworkAdministrator',
                'AwsDatabaseAdministrator',
                'AwsSecurityAudit',
                'AwsSupportUser',
                'AwsSystemAdministrator'] %}

{% set AWSSubAccounts = [ {'Name': 'MGT', 'Id': '140499857323'}, 
                          { 'Name': 'SHR', 'Id':'980637231723' },
                          { 'Name': 'DEV', 'Id':'543945541886' },
                          ] %}

Resources:
  GroupManagement:
    Type: AWS::IAM::Group
    Properties:
      GroupName: GroupManagement
      Path: /admin/
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                - iam:AddUserToGroup
                Effect: Allow
                Resource:
                  - !GetAtt UserCredentialsManagement.Arn
              - Action:
                  - iam:AddUserToGroup
                  - iam:RemoveUserFromGroup
                Effect: Allow
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:group/admin/GroupManagement
                  - !GetAtt UserManagement.Arn
                  - !GetAtt AccountListing.Arn
                  - !GetAtt BillingReadAccess.Arn
                  - !GetAtt SecurityAudit.Arn
                  {% for Role in Roles %}
                  - !Sub arn:aws:iam::${AWS::AccountId}:group/assume/Assume{{Role}}_*
                  {% endfor %}
              - Action:
                  - iam:ListGroups
                  - iam:ListGroupsForUser
                  - iam:GetGroup
                  - iam:GetGroupPolicy
                  - iam:ListGroupPolicies
                  - iam:ListAttachedGroupPolicies
                  - iam:GetAccountAuthorizationDetails
                  - iam:GetAccountSummary
                  - iam:GetPolicy
                  - iam:GetPolicyVersion
                Effect: Allow
                Resource: '*'
          PolicyName: Policy

  {% for Account in AWSSubAccounts%}
  {% for Role in Roles %}
  {{Role}}Group{{Account['Id']}}:
    Type: AWS::IAM::Group
    Properties:
      GroupName: Assume{{Role}}_{{Account['Name'] | resource}}_{{Account['Id']}}
      Path: /assume/
      Policies:
      - PolicyDocument:
          Statement:
            - Action:
                - sts:AssumeRole
              Effect: Allow
              Resource:
                - arn:aws:iam::{{Account['Id']}}:role/Assumable{{Role}}Role
        PolicyName: {{Role}}Policy{{Account['Id']}}
  {% endfor %}
  {% endfor %}
